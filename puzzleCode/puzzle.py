
# Read csv file from the csv method
try:
    readCsvFile = open("menu.csv", 'r')
    menuRead = readCsvFile.read()
    readMenuItem = menuRead.split("\n")
    final_string = readMenuItem[0:len(readMenuItem)]


    # Function Converting the CSV items in List

    def csvItemList(final_string):
        csvItemList = []
        for item in final_string:
            int_fields = []
            string_fields = item.split(",")
            i = 0
            for value in string_fields:
                # print("s")

                if len(value) != 0:
                    # print(value)
                    i = i + 1
                    int_fields.append(value)
                    if i % 2 != 0:
                        csvItemList.append(int_fields)
        return csvItemList


    # Retrieving Final List by using the function csvItemList

    csvItemList = csvItemList(final_string)


    #  Retrieving thee target value of the item and its index position in the list

    def targetValueItem(list1):
        global targetValue
        for i, item in enumerate(list1):
            if item[0] == 'Target price':
                targetIndex = i
                targetValue = float(item[1])
        return round(targetIndex, 2)


    # Retrieving target value index position in the list by using targetValueItem function

    pos = targetValueItem(csvItemList)


    # Removing the target list item from the list and generating new list with the remaining items in the list

    def removeTargetItem(list, pos):
        newlist = []

        # traverse in the list
        for x in range(len(list)):

            # if index not equal to pos
            if x != pos:
                newlist.append(list[x])
        return newlist


    # Retrieving new list of Items after excluding the target value in the csv file

    itemList = removeTargetItem(csvItemList, pos)


    # Function declared for sort based on last element

    def lastElement(tuple):
        return tuple[-1]


    # Last Element function is used to sort the list generated by using listItem function

    itemList.sort(key=lastElement)


    def combinationItem(listItem, target):
        global result
        result = []
        if not listItem:
            return []

        helper(listItem, 0, [], target)
        return result


    def helper(listItem, start, items, target):
        if target == 0.0:
            result.append(list(items))

        for i in range(start, len(listItem)):
            if float(listItem[i][1]) > target:
                return

            # if listItem[i][0]  in items:
            items.append(listItem[i][0])

            # The below line is used by assuming repetation of items is allowed while making recommendation
            helper(listItem, i, items, round(float(target - float(listItem[i][1])), 2))

            # The below line is used by assuming repetation of items is not allowed while making recommendation
            # helper(listItem, i, items, round(float(target - float(listItem[i][1])), 2))
            # So using both way we can make recommendation using repeated or non repeated items from list.

            items.pop()


    # Offer Item function is used to give the recommendation from using combinationItem function
    # or if no items are in combination then a message will be dispalyed

    def offerItem(result):
        if result == []:
            print("There is no combination of dishes that is equal to the target price")
        else:
            print("The Recommendation for items is given below")
            print(result)


# Function offerItem is called  by passing an array and the target amount for recommendation

    offerItem(combinationItem(itemList, targetValue))
except:
    print(" Please check there is some exception in processing file")
